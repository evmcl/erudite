package com.evanmclean.erudite.then;

import java.io.File;

import com.evanmclean.erudite.Article;
import com.evanmclean.erudite.Processor;

/**
 * The handler to post-process a document file generated by the
 * {@link Processor}.
 * 
 * @author Evan M<sup>c</sup>Lean, <a href="http://evanmclean.com/"
 *         target="_blank">M<sup>c</sup>Lean Computer Services</a>
 */
public interface Then
{
  /**
   * Reserve a unique file and/or folder for saving the processed document.
   * Sometimes we need to know the final name of the file and/or folder to be
   * produced before we actually commence processing the article.
   * 
   * @param article
   *        The article we are creating the file and/or folder for. The name of
   *        the file and/or folder will be based on the title of the article.
   * @param file_suffix
   *        The suffix to add to the name of the file (e.g., &ldquo;
   *        <code>.txt</code>&rdquo;.) If <code>null</code> then no file is
   *        created.
   * @param folder_suffix
   *        The suffix to add to the name of the folder (e.g., &ldquo;
   *        <code>_files</code>&rdquo;.) If <code>null</code> then no folder is
   *        created.
   * @return A reservation object that is passed to
   *         {@link #then(Reservation, File, File)}.
   * @throws Exception
   */
  Reservation reserve( Article article, String file_suffix, String folder_suffix )
    throws Exception;

  /**
   * Reserve a unique file and/or folder for saving the processed document.
   * Sometimes we need to know the final name of the file and/or folder to be
   * produced before we actually commence processing the article.
   * 
   * @param base_name
   *        A prefix to use in creating the unique names of the file and/or
   *        folder.
   * @param file_suffix
   *        The suffix to add to the name of the file (e.g., &ldquo;
   *        <code>.txt</code>&rdquo;.) If <code>null</code> then no file is
   *        created.
   * @param folder_suffix
   *        The suffix to add to the name of the folder (e.g., &ldquo;
   *        <code>_files</code>&rdquo;.) If <code>null</code> then no folder is
   *        created.
   * @return A reservation object that is passed to
   *         {@link #then(Reservation, File, File)}.
   * @throws Exception
   */
  Reservation reserve( String base_name, String file_suffix,
      String folder_suffix ) throws Exception;

  /**
   * Perform the post-processing action on the document.
   * 
   * @param reservation
   *        The reservation object produces by a call to <code>reserve</code>.
   * @param from_file
   *        The file to be copied to the reserve location. (<code>null</code> if
   *        there is no file to copy.)
   * @param from_folder
   *        The folder who's contents should be copied to the reserve location.
   *        (<code>null</code> if there is no folder to copy.)
   * @throws Exception
   */
  void then( Reservation reservation, File from_file, File from_folder )
    throws Exception;
}
